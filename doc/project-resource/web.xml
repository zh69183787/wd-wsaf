<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">


  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
<!--  <filter>-->
<!--	<filter-name>CommonWebFilter</filter-name>-->
<!--	<filter-class>com.wonders.frame.iims.filter.LoginFilter</filter-class>-->
<!--	<init-param>-->
<!--		<param-name>ignoreUrls</param-name>-->
<!--		<param-value>/caClient.jsp,/index.jsp</param-value>-->
<!--	</init-param>-->
<!-- </filter>-->
<!-- -->
<!--<filter-mapping>-->
<!--	<filter-name>CommonWebFilter</filter-name>-->
<!--	<url-pattern>/*</url-pattern>-->
<!--</filter-mapping>-->
   <!-- spring security必须的过滤器,保证在访问所有的页面时都必须通过认证 -->  
<!--  <filter>-->
<!--    <filter-name>springSecurityFilterChain</filter-name>-->
<!--    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
<!--  </filter>-->
<!--  <filter-mapping>-->
<!--    <filter-name>springSecurityFilterChain</filter-name>-->
<!--    <url-pattern>/*</url-pattern>-->
<!--  </filter-mapping>-->
  
<!-- open session filter -->  
 <filter>  
     <filter-name>openSessionInViewFilter</filter-name>  
     <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>  
     <init-param>  
     <param-name>singleSession</param-name>  
     <param-value>true</param-value>  
     </init-param>  
 </filter>  

  
  
  <servlet>
    <servlet-name>mvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
   	  <description>spring mvc 配置文件</description>
      <param-name>contextConfigLocation</param-name>
      <param-value>
				classpath:spring-mvc.xml
			</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>mvc</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
   <!-- 配置spring监听器 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
			classpath:applicationContext.xml			
		</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <context-param>
    <param-name>log4jExposeWebAppRoot</param-name>
    <param-value>false</param-value>
  </context-param>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <context-param>
    <param-name>log4jRefreshInterval</param-name>
    <param-value>60000</param-value>
  </context-param>
  <session-config>
    <session-timeout>10</session-timeout>
  </session-config>
</web-app>